/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface GreeterInterface extends ethers.utils.Interface {
  functions: {
    "greet()": FunctionFragment;
    "list(uint256)": FunctionFragment;
    "listMember(uint256)": FunctionFragment;
    "setGreeting(string,tuple[8])": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "greet", values?: undefined): string;
  encodeFunctionData(functionFragment: "list", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "listMember",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setGreeting",
    values: [
      string,
      [
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        }
      ]
    ]
  ): string;

  decodeFunctionResult(functionFragment: "greet", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "list", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "listMember", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setGreeting",
    data: BytesLike
  ): Result;

  events: {};
}

export class Greeter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: GreeterInterface;

  functions: {
    greet(overrides?: CallOverrides): Promise<[string]>;

    list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, boolean] & {
        releaseDate: BigNumber;
        releaseAmount: BigNumber;
        hasBeenClaimed: boolean;
      }
    >;

    listMember(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, boolean] & {
          releaseDate: BigNumber;
          releaseAmount: BigNumber;
          hasBeenClaimed: boolean;
        }
      ]
    >;

    setGreeting(
      _greeting: string,
      t: [
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        }
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  greet(overrides?: CallOverrides): Promise<string>;

  list(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, boolean] & {
      releaseDate: BigNumber;
      releaseAmount: BigNumber;
      hasBeenClaimed: boolean;
    }
  >;

  listMember(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, boolean] & {
      releaseDate: BigNumber;
      releaseAmount: BigNumber;
      hasBeenClaimed: boolean;
    }
  >;

  setGreeting(
    _greeting: string,
    t: [
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      }
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    greet(overrides?: CallOverrides): Promise<string>;

    list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, boolean] & {
        releaseDate: BigNumber;
        releaseAmount: BigNumber;
        hasBeenClaimed: boolean;
      }
    >;

    listMember(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, boolean] & {
        releaseDate: BigNumber;
        releaseAmount: BigNumber;
        hasBeenClaimed: boolean;
      }
    >;

    setGreeting(
      _greeting: string,
      t: [
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        }
      ],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    greet(overrides?: CallOverrides): Promise<BigNumber>;

    list(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    listMember(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setGreeting(
      _greeting: string,
      t: [
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        }
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    greet(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    listMember(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setGreeting(
      _greeting: string,
      t: [
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        },
        {
          releaseDate: BigNumberish;
          releaseAmount: BigNumberish;
          hasBeenClaimed: boolean;
        }
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
