/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenLocker, TokenLockerInterface } from "../TokenLocker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "releaseAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasBeenClaimed",
            type: "bool",
          },
        ],
        internalType: "struct VestSchedule[8]",
        name: "schedule",
        type: "tuple[8]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenVestSchedule",
    outputs: [
      {
        internalType: "uint256",
        name: "releaseDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasBeenClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a8c38038062000a8c8339810160408190526200003491620001b0565b60018054336001600160a01b0319918216179091556000805482166001600160a01b0385811691909117825560028054909316908616179091555b60088160ff16101562000122576000828260ff166008811062000096576200009662000281565b60200201519015156040909101528160ff821660088110620000bc57620000bc62000281565b602002015160038260ff1660088110620000da57620000da62000281565b825160039190910291909101908155602082015160018201556040909101516002909101805460ff191691151591909117905580620001198162000297565b9150506200006f565b50505050620002c6565b80516001600160a01b03811681146200014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b038111828210171562000185576200018562000149565b60405290565b604051606081016001600160401b038111828210171562000185576200018562000149565b6000806000610340808587031215620001c857600080fd5b620001d3856200012c565b93506020620001e48187016200012c565b9350604087605f880112620001f857600080fd5b620002026200015f565b9287019280898511156200021557600080fd5b8289015b8581101562000271576060818c031215620002345760008081fd5b6200023e6200018b565b8151815285820151868201528482015180151581146200025e5760008081fd5b8186015283529184019160600162000219565b5080955050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff811415620002bd57634e487b7160e01b600052601160045260246000fd5b60010192915050565b6107b680620002d66000396000f3fe6080604052600436106100435760003560e01c80636639016b1461004f57806386d1a69f14610066578063893d20e81461007b578063a7e5c3f3146100a857600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100e5565b005b34801561007257600080fd5b50610064610177565b34801561008757600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100b457600080fd5b506100c86100c336600461064e565b610394565b60408051938452602084019290925215159082015260600161009f565b6000471161013a5760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e4c6f636b65723a206e6f2045746820746f2072656c65617365000060448201526064015b60405180910390fd5b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610174573d6000803e3d6000fd5b50565b6000805b60088111610238576003816008811061019657610196610667565b600302015442108015906101c55750600381600881106101b8576101b8610667565b600302016002015460ff16155b1561022657600381600881106101dd576101dd610667565b6003020160010154826101f09190610693565b915060016003826008811061020757610207610667565b6003020160020160006101000a81548160ff0219169083151502179055505b80610230816106ab565b91505061017b565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561027c57600080fd5b505afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b491906106c6565b9050600081116103105760405162461bcd60e51b815260206004820152602160248201527f546f6b656e4c6f636b65723a206e6f20746f6b656e7320746f2072656c6561736044820152606560f81b6064820152608401610131565b828110156103725760405162461bcd60e51b815260206004820152602960248201527f546f6b656e4c6f636b65723a206e6f7420656e6f75676820746f6b656e7320746044820152686f2072656c6561736560b81b6064820152608401610131565b60005460025461038f916001600160a01b039182169116856103be565b505050565b600381600881106103a457600080fd5b600302018054600182015460029092015490925060ff1683565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261038f9286929160009161044e9185169084906104cb565b80519091501561038f578080602001905181019061046c91906106df565b61038f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610131565b60606104da84846000856104e4565b90505b9392505050565b6060824710156105455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610131565b6001600160a01b0385163b61059c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610131565b600080866001600160a01b031685876040516105b89190610731565b60006040518083038185875af1925050503d80600081146105f5576040519150601f19603f3d011682016040523d82523d6000602084013e6105fa565b606091505b509150915061060a828286610615565b979650505050505050565b606083156106245750816104dd565b8251156106345782518084602001fd5b8160405162461bcd60e51b8152600401610131919061074d565b60006020828403121561066057600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156106a6576106a661067d565b500190565b60006000198214156106bf576106bf61067d565b5060010190565b6000602082840312156106d857600080fd5b5051919050565b6000602082840312156106f157600080fd5b815180151581146104dd57600080fd5b60005b8381101561071c578181015183820152602001610704565b8381111561072b576000848401525b50505050565b60008251610743818460208701610701565b9190910192915050565b602081526000825180602084015261076c816040850160208701610701565b601f01601f1916919091016040019291505056fea2646970667358221220e2939ca1a217f61aeeab73f870ea53b551bbe03bac4a01d25fdaf7746ab9312064736f6c63430008080033";

export class TokenLocker__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    tokenAddress: string,
    owner: string,
    schedule: [
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      }
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenLocker> {
    return super.deploy(
      tokenAddress,
      owner,
      schedule,
      overrides || {}
    ) as Promise<TokenLocker>;
  }
  getDeployTransaction(
    tokenAddress: string,
    owner: string,
    schedule: [
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      },
      {
        releaseDate: BigNumberish;
        releaseAmount: BigNumberish;
        hasBeenClaimed: boolean;
      }
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenAddress,
      owner,
      schedule,
      overrides || {}
    );
  }
  attach(address: string): TokenLocker {
    return super.attach(address) as TokenLocker;
  }
  connect(signer: Signer): TokenLocker__factory {
    return super.connect(signer) as TokenLocker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenLockerInterface {
    return new utils.Interface(_abi) as TokenLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenLocker {
    return new Contract(address, _abi, signerOrProvider) as TokenLocker;
  }
}
