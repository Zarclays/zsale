/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LiquidityLocker,
  LiquidityLockerInterface,
} from "../LiquidityLocker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dexRouterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseLPTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f85380380610f8583398101604081905261002f91610119565b4281116100a85760405162461bcd60e51b815260206004820152603460248201527f4c69717569646974794c6f636b65723a2072656c656173652074696d6520697360448201527f206265666f72652063757272656e742074696d65000000000000000000000000606482015260840160405180910390fd5b600055600880546001600160a01b039586166001600160a01b0319918216179091556005805482163317905560019190915560048054928516928216929092179091556006805492909316911617905561016f565b80516001600160a01b038116811461011457600080fd5b919050565b600080600080600060a0868803121561013157600080fd5b61013a866100fd565b9450610148602087016100fd565b9350610156604087016100fd565b6060870151608090970151959894975095949392505050565b610e078061017e6000396000f3fe6080604052600436106100595760003560e01c806353462d6b146100655780636639016b1461008857806386d1a69f1461009f578063893d20e8146100b4578063a376b2dc146100dc578063e8078d94146100f157600080fd5b3661006057005b600080fd5b34801561007157600080fd5b506000546040519081526020015b60405180910390f35b34801561009457600080fd5b5061009d610106565b005b3480156100ab57600080fd5b5061009d6101c8565b3480156100c057600080fd5b506004546040516001600160a01b03909116815260200161007f565b3480156100e857600080fd5b5061009d6102e3565b3480156100fd57600080fd5b5061009d610406565b6000544210156101315760405162461bcd60e51b815260040161012890610c08565b60405180910390fd5b6000471161018c5760405162461bcd60e51b815260206004820152602260248201527f4c69717569646974794c6f636b65723a206e6f2045746820746f2072656c6561604482015261736560f01b6064820152608401610128565b6004546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156101c5573d6000803e3d6000fd5b50565b6000544210156101ea5760405162461bcd60e51b815260040161012890610c08565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561022e57600080fd5b505afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610c5c565b9050600081116102c65760405162461bcd60e51b815260206004820152602560248201527f4c69717569646974794c6f636b65723a206e6f20746f6b656e7320746f2072656044820152646c6561736560d81b6064820152608401610128565b6004546006546101c5916001600160a01b0391821691168361095c565b6000544210156103055760405162461bcd60e51b815260040161012890610c08565b6007546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b15801561034d57600080fd5b505afa158015610361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103859190610c5c565b9050600081116103e85760405162461bcd60e51b815260206004820152602860248201527f4c69717569646974794c6f636b65723a206e6f204c5020746f6b656e7320746f6044820152672072656c6561736560c01b6064820152608401610128565b600454610402906001600160a01b0384811691168361095c565b5050565b6005546001600160a01b0316331461047e5760405162461bcd60e51b815260206004820152603560248201527f4c69717569646974794c6f636b65723a204f6e6c79206465706c6f796572206360448201527430b71031b0b636103a3434b990333ab731ba34b7b760591b6064820152608401610128565b6006546001600160a01b03166104e55760405162461bcd60e51b815260206004820152602660248201527f4c69717569646974794c6f636b65723a20546f6b656e2063616e206e6f74206260448201526565207a65726f60d01b6064820152608401610128565b60015447906000906104f8908390610c8b565b905060008260015461050a9190610c8b565b6105149083610caa565b9050600083116105795760405162461bcd60e51b815260206004820152602a60248201527f4c69717569646974794c6f636b65723a206e6f20657468657220746f20616464604482015269206c697175696469747960b01b6064820152608401610128565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156105bd57600080fd5b505afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190610c5c565b1161065d5760405162461bcd60e51b815260206004820152603260248201527f4c69717569646974794c6f636b65723a206e6f20746f6b656e2062616c616e636044820152716520746f20616464206c697175696469747960701b6064820152608401610128565b60065460085460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b390604401602060405180830381600087803b1580156106ae57600080fd5b505af11580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190610cc1565b506008546006546001600160a01b039182169163f305d71991168480873061070f426064610ce3565b60405160e088901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c401606060405180830381600087803b15801561077857600080fd5b505af115801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b09190610cfb565b50506008546040805163c45a015560e01b815290516001600160a01b03909216925063c45a0155916004808301926020929190829003018186803b1580156107f757600080fd5b505afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f9190610d29565b600654600854604080516315ab88c960e31b815290516001600160a01b039485169463e6a4390594811693169163ad5c4648916004808301926020929190829003018186803b15801561088157600080fd5b505afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b99190610d29565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b1580156108ff57600080fd5b505afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190610d29565b600780546001600160a01b0319166001600160a01b0392909216919091179055505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109ae9084906109b3565b505050565b6000610a08826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a859092919063ffffffff16565b8051909150156109ae5780806020019051810190610a269190610cc1565b6109ae5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610128565b6060610a948484600085610a9e565b90505b9392505050565b606082471015610aff5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610128565b6001600160a01b0385163b610b565760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610128565b600080866001600160a01b03168587604051610b729190610d82565b60006040518083038185875af1925050503d8060008114610baf576040519150601f19603f3d011682016040523d82523d6000602084013e610bb4565b606091505b5091509150610bc4828286610bcf565b979650505050505050565b60608315610bde575081610a97565b825115610bee5782518084602001fd5b8160405162461bcd60e51b81526004016101289190610d9e565b60208082526034908201527f4c69717569646974794c6f636b65723a2063757272656e742074696d65206973604082015273206265666f72652072656c656173652074696d6560601b606082015260800190565b600060208284031215610c6e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610ca557610ca5610c75565b500290565b600082821015610cbc57610cbc610c75565b500390565b600060208284031215610cd357600080fd5b81518015158114610a9757600080fd5b60008219821115610cf657610cf6610c75565b500190565b600080600060608486031215610d1057600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215610d3b57600080fd5b81516001600160a01b0381168114610a9757600080fd5b60005b83811015610d6d578181015183820152602001610d55565b83811115610d7c576000848401525b50505050565b60008251610d94818460208701610d52565b9190910192915050565b6020815260008251806020840152610dbd816040850160208701610d52565b601f01601f1916919091016040019291505056fea2646970667358221220835f43a5dde7cdd704c2a6064ccf8769080666bcd1169fcec98e21dc735d31ec64736f6c63430008080033";

export class LiquidityLocker__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    dexRouterAddress: string,
    token: string,
    owner: string,
    price: BigNumberish,
    releaseTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityLocker> {
    return super.deploy(
      dexRouterAddress,
      token,
      owner,
      price,
      releaseTime,
      overrides || {}
    ) as Promise<LiquidityLocker>;
  }
  getDeployTransaction(
    dexRouterAddress: string,
    token: string,
    owner: string,
    price: BigNumberish,
    releaseTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dexRouterAddress,
      token,
      owner,
      price,
      releaseTime,
      overrides || {}
    );
  }
  attach(address: string): LiquidityLocker {
    return super.attach(address) as LiquidityLocker;
  }
  connect(signer: Signer): LiquidityLocker__factory {
    return super.connect(signer) as LiquidityLocker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityLockerInterface {
    return new utils.Interface(_abi) as LiquidityLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityLocker {
    return new Contract(address, _abi, signerOrProvider) as LiquidityLocker;
  }
}
